"use strict";(self.webpackChunktest_web=self.webpackChunktest_web||[]).push([[338],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),i=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=i(n),m=a,k=c["".concat(p,".").concat(m)]||c[m]||d[m]||s;return n?r.createElement(k,o(o({ref:t},u),{},{components:n})):r.createElement(k,o({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var i=2;i<s;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1371:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>i});var r=n(7462),a=(n(7294),n(3905));const s={sidebar_position:4},o="RestfulAPI",l={unversionedId:"RestfulAPI",id:"RestfulAPI",title:"RestfulAPI",description:"\u5efa\u7f6e\u5c08\u6848",source:"@site/docs/RestfulAPI.md",sourceDirName:".",slug:"/RestfulAPI",permalink:"/docusaurus/docs/RestfulAPI",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Markdown",permalink:"/docusaurus/docs/Markdown"}},p={},i=[{value:"\u5efa\u7f6e\u5c08\u6848",id:"\u5efa\u7f6e\u5c08\u6848",level:2},{value:"\u5efa\u7acb\u9023\u7dda",id:"\u5efa\u7acb\u9023\u7dda",level:2},{value:"\u64cd\u4f5cPostman",id:"\u64cd\u4f5cpostman",level:2}],u={toc:i},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"restfulapi"},"RestfulAPI"),(0,a.kt)("h2",{id:"\u5efa\u7f6e\u5c08\u6848"},"\u5efa\u7f6e\u5c08\u6848"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5efa\u7acb\u8cc7\u6599\u593e:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mkdir testAPI\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u5b89\u88ddpackage.json\u5957\u4ef6:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm init\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"\u4f9d\u5e8f\u5efa\u7acbserver.js\u8207api\u8cc7\u6599\u593e:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"testAPI",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"package.json"),(0,a.kt)("li",{parentName:"ul"},"server.js"),(0,a.kt)("li",{parentName:"ul"},"api",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"controllers / Controller.js"),(0,a.kt)("li",{parentName:"ul"},"models / Model.js"),(0,a.kt)("li",{parentName:"ul"},"routes / Route.js")))))),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"\u5b89\u88ddExpress, Mongoose, Nodemon:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install express --save\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install mongoose --save\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install --save-dev nodemon\n")),(0,a.kt)("h2",{id:"\u5efa\u7acb\u9023\u7dda"},"\u5efa\u7acb\u9023\u7dda"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u8a2d\u5b9aserver:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// server.js\nvar express = require('express'),\n    app = express(),\n    port = process.env.PORT || 3000;\n\napp.listen(port);\n\nconsole.log('RESTful API server started on: ' + port);\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u8a2d\u5b9aSchema:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Model.js\nconst mongoose = require('mongoose');\n\nlet PracticeSchema = new mongoose.Schema(\n    {\n        code: {\n            type: String,\n            required: true,\n            enum: [\"LEARNER\", \"WRITER\", \"EDITOR\", \"ADMIN\"]\n        },\n        status: {\n            type: Boolean,\n            default: true\n        }\n    },\n    {\n        timestamps: true,\n        versionKey: false\n    },\n);\nPracticeSchema.set('collection', 'practice_for_James');\nmodule.exports = mongoose.model('practice', PracticeSchema);\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"\u8a2d\u5b9aRoutes:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Routes.js\nmodule.exports = function(app) {\n    var todoList = require('../controllers/Controller');\n\n    // Routes\n    app.route('/tasks') // \u8655\u7406GET/POST\n        .get(todoList.list_all_tasks)\n        .post(todoList.create_a_task);\n\n    app.route('/tasks/:taskId') // \u8655\u7406 GET/PUT/DELETE\n        .get(todoList.read_a_task)\n        .put(todoList.update_a_task)\n        .delete(todoList.delete_a_task);\n};\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"\u8a2d\u5b9aController")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Controller.js\n'use strict';\n\nvar mongoose = require('mongoose'),\n    Task = mongoose.model('practice');  //\u4e00\u958b\u59cb\u5efa\u7acb\u7684Tasks schema\n\n//\u91dd\u5c0d\u4e0d\u540crequest\u7684\u56de\u61c9(json\u683c\u5f0f)\n\nexports.list_all_tasks = function(req, res) {\n    Task.find({}, function(err, task) {\n        if (err)\n            res.send(err);\n        res.json(task);\n    });\n};\n\n//CRUD\n\nexports.create_a_task = function(req, res) {\n    var new_task = new Task(req.body);\n    new_task.save(function(err, task) {\n        if (err)\n            res.send(err);\n        res.json(task);\n    });\n};\n\nexports.read_a_task = function(req, res) {\n    Task.findById(req.params.taskId, function(err, task) {\n        if (err)\n            res.send(err);\n        res.json(task);\n    });\n};\n\nexports.update_a_task = function(req, res) {\n    Task.findOneAndUpdate(req.params.taskId, req.body, { new: true }, function(err, task) {\n        if (err)\n            res.send(err);\n        res.json(task);\n    });\n};\n\nexports.delete_a_task = function(req, res) {\n    Task.remove({\n        _id: req.params.taskId\n    }, function(err, task) {\n        if (err)\n            res.send(err);\n        res.json({ message: 'Task successfully deleted' });\n    });\n};\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"\u9023\u63a5\u6240\u6709\u8a2d\u5b9a\uff0c\u4fee\u6539server.js:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var express = require('express'),\n    app = express(),\n    port = process.env.PORT || 3000,\n    mongoose = require('mongoose'),\n    Task = require('./api/models/Model'),\n    bodyParser = require('body-parser');\n\nmongoose.Promise = global.Promise;\nmongoose.connect('mongodb://PRSuser:PRSpassword@10.185.137.71:27017/prsystem');\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\nvar routes = require('./api/routes/Route');\nroutes(app);\n\napp.listen(port);\n\nconsole.log('todo list RESTful API server started on: ' + port);\n")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"\u5b89\u88ddbodyParser\u89e3\u6790\u56de\u50b3\u7684json\u8cc7\u6599")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install --save body-parser\n")),(0,a.kt)("h2",{id:"\u64cd\u4f5cpostman"},"\u64cd\u4f5cPostman"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u9078\u64c7GET\u4e26\u8f38\u5165http://localhost:3000/tasks\u5373\u53ef\u67e5\u770b\u6240\u6709\u8cc7\u6599"),(0,a.kt)("li",{parentName:"ol"},"\u52d5\u4f5c\u6539\u70baPOST\u4e26\u5728Body\u8f38\u5165\u5c0d\u61c9\u7684Key\u8ddfValue\u5373\u53ef\u65b0\u589e\u8cc7\u6599"),(0,a.kt)("li",{parentName:"ol"},"\u52d5\u4f5c\u6539\u70baDELETE\u4e26\u8b1b\u7db2\u5740\u6539\u70bahttp://localhost:3000/tasks/taskid\u5373\u53ef\u5c07\u8cc7\u6599\u522a\u9664"),(0,a.kt)("li",{parentName:"ol"},"\u6b64\u6642\u52d5\u4f5c\u6539\u70baGET\u5c07\u5f97\u5230\u55ae\u7b46\u8cc7\u6599")))}d.isMDXComponent=!0}}]);